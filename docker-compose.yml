version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD-SHELL", "cub kafka-ready -b kafka:9092 1 30" ]
      interval: 5s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    environment:
      - discovery.type=single-node
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail elasticsearch:9200/_cluster/health?wait_for_status=yellow&timeout=50s || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.3
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  books_list_fetcher:
    image: books_list_fetcher_image
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - LITRES_BOOKS_COUNT_LIMIT=1000

  books_details_fetcher:
    image: books_details_fetcher_image
    depends_on:
      kafka:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
